import React, { useEffect, useRef, useState } from 'react';
import { LoadScript, GoogleMap, Marker } from '@react-google-maps/api';
import { toast } from 'react-toastify';
import axios from 'axios';
import { useCartStore } from 'context/cart-context';

const defaultLocation = { lat: 45.516, lng: -73.56 };

export default function MapScreen() {
  const setShippingAddress = useCartStore((state) => state.setShippingAddress);

  const [googleApiKey, setGoogleApiKey] = useState('');
  const [center, setCenter] = useState(defaultLocation);
  const [location, setLocation] = useState(center);

  const mapRef = useRef(null);
  const markerRef = useRef(null);

  const getUserCurrentLocation = () => {
    if (!navigator.geolocation) {
      alert('Geolocation is not supported by this browser');
    } else {
      navigator.geolocation.getCurrentPosition((position) => {
        setCenter({
          lat: position.coords.latitude,
          lng: position.coords.longitude,
        });
        setLocation({
          lat: position.coords.latitude,
          lng: position.coords.longitude,
        });
      });
    }
  };

  useEffect(() => {
    const fetchGoogleApiKey = async () => {
      try {
        const { data } = await axios('/api/keys/google', {
          headers: { Authorization: `BEARER ${userInfo.token}` },
        });
        setGoogleApiKey(data.key);
        getUserCurrentLocation();
      } catch (error) {
        console.error(error);
      }
    };

    fetchGoogleApiKey();
    dispatch({
      type: 'SET_FULLBOX_ON',
    });
  }, [dispatch, userInfo.token]);

  const onLoad = (map: any) => {
    mapRef.current = map;
  };
  

  const onIdle = () => {
    setLocation({
      lat: mapRef.current?.getCenter()?.lat() || defaultLocation.lat,
      lng: mapRef.current?.getCenter()?.lng() || defaultLocation.lng,
    });
  };
  const onMarkerLoad = (marker) => {
    markerRef.current = marker;
  };

  const onConfirm = () => {
    // dispatch({
    //   type: 'SET_SHIPPING_ADDRESS_MAP_LOCATION',
    //   payload: {
    //     lat: location.lat,
    //     lng: location.lng,
    //   },
    // }); 
    //retire o trech comentado acima e coloque os valores no useCart setShippingAddress
    toast.success('Location selected successfully.');
    navigate('/shipping'); // troque esse trecho para sem navegação e fecha a mascara e direcione para 
  };

  return (
    <div className="full-box">
      <LoadScript googleMapsApiKey={googleApiKey}>
        <GoogleMap
          id="smaple-map"
          mapContainerStyle={{ height: '100%', width: '100%' }}
          center={center}
          zoom={15}
          onLoad={onLoad}
          onIdle={onIdle}
        >
          <div className="map-input-box">
            <Button type="button" onClick={onConfirm}>
              Confirm
            </Button>
          </div>
          <Marker position={location} onLoad={onMarkerLoad}></Marker>
        </GoogleMap>
      </LoadScript>
    </div>
  );
}
